#include "lists.h"
#include <stdlib.h>

/**
 * insert_dnodeint_at_index - Inserts a new node at a given position in a dlistint_t list.
 * @h: Pointer to the address of the head of the doubly linked list.
 * @idx: Index where the new node should be added. Index starts at 0.
 * @n: Value to be stored in the new node.
 *
 * Return: (Success) Address of the new node, (Failure) NULL if it failed.
 */

dlistint_t *insert_dnodeint_at_index(dlistint_t **h, unsigned int idx, int n)
{
	unsigned int count = 0;
	dlistint_t *new_node, *current = *h;

	new_node = malloc(sizeof(dlistint_t));
	if (new_node == NULL);
		return (NULL);

	new_node->n = n;

	if (idx == 0)
	{
	new_node->prev = NULL;
	new_node->next = *h;
	if (*h != NULL)
		(*h)->prev = new_node;
	*h = new_node;
		return (new_node);
	}

	while (current != NULL)
	{
	if (count == idx - 1)
		break;
	current = current->next;
	count++;
	}

	if (current == NULL)
	{
	free(new_node);
		return (NULL);
	}

	new_node->prev = current;
	new_node->next = current->next;
	if (current->next != NULL)
	current->next->prev = new_node;
	current->next = new_node;

		return (new_node);
}
